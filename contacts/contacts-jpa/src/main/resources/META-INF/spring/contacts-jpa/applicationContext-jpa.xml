<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<context:property-placeholder properties-ref="dataSourceProperties"/>

	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean class="org.springframework.orm.jpa.JpaTransactionManager"
		id="transactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${database.driverClassName}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="1800000" />
		<property name="numTestsPerEvictionRun" value="3" />
		<property name="minEvictableIdleTimeMillis" value="1800000" />
	</bean>

	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="false" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="packagesToScan" value="org.springframework.data.examples.domain" />
		<property name="jpaProperties" ref="jpaProperties" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
	</bean>

	<beans profile="unit-test">
		<util:properties id="jpaProperties">
			<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
			<!-- value="create" to build a new database on each run; value="update" 
				to modify an existing database; value="create-drop" means the same as "create" 
				but also drops tables when Hibernate closes; value="validate" makes no changes 
				to the database -->
			<prop key="hibernate.hbm2ddl.auto">create</prop>
			<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
			<prop key="hibernate.connection.charSet">UTF-8</prop>
		</util:properties>
		
		<util:properties id="dataSourceProperties">
		 <prop key="database.driverClassName">org.hsqldb.jdbcDriver</prop>
		 <prop key="database.url">jdbc:hsqldb:mem:contacts</prop>
		 <prop key="database.username">sa</prop>
		 <prop key="database.password"></prop>
		</util:properties>
	</beans>
	
	<beans profile="default">
		<util:properties id="jpaProperties">
			<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
			<!-- value="create" to build a new database on each run; value="update" 
				to modify an existing database; value="create-drop" means the same as "create" 
				but also drops tables when Hibernate closes; value="validate" makes no changes 
				to the database -->
			<prop key="hibernate.hbm2ddl.auto">update</prop>
			<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
			<prop key="hibernate.connection.charSet">UTF-8</prop>
		</util:properties>
		
		<util:properties id="dataSourceProperties">
		 <prop key="database.driverClassName">com.mysql.jdbc.Driver</prop>
		 <prop key="database.url">jdbc:mysql://192.168.20.130:3306/contacts</prop>
		 <prop key="database.username">root</prop>
		 <prop key="database.password"></prop>
		</util:properties>
	</beans>
	

</beans>
